.TH ahriman "1" Manual
.SH NAME
ahriman
.SH SYNOPSIS
.B ahriman
[-h] [-a ARCHITECTURE] [-c CONFIGURATION] [--force] [-l LOCK] [--no-report] [-q] [--unsafe] [-v] {aur-search,search,key-import,package-add,add,package-update,package-remove,remove,package-status,status,package-status-remove,package-status-update,status-update,patch-add,patch-list,patch-remove,repo-check,check,repo-clean,clean,repo-config,config,repo-init,init,repo-rebuild,rebuild,repo-remove-unknown,remove-unknown,repo-report,report,repo-setup,setup,repo-sign,sign,repo-status-update,repo-sync,sync,repo-update,update,user-add,user-remove,web} ...
.SH DESCRIPTION
ArcH Linux ReposItory MANager
.SH OPTIONS

.TP
\fB\-a\fR \fI\,ARCHITECTURE\/\fR, \fB\-\-architecture\fR \fI\,ARCHITECTURE\/\fR
target architectures (can be used multiple times)

.TP
\fB\-c\fR \fI\,CONFIGURATION\/\fR, \fB\-\-configuration\fR \fI\,CONFIGURATION\/\fR
configuration path

.TP
\fB\-\-force\fR
force run, remove file lock

.TP
\fB\-l\fR \fI\,LOCK\/\fR, \fB\-\-lock\fR \fI\,LOCK\/\fR
lock file

.TP
\fB\-\-no\-report\fR
force disable reporting to web service

.TP
\fB\-q\fR, \fB\-\-quiet\fR
force disable any logging

.TP
\fB\-\-unsafe\fR
allow to run ahriman as non\-ahriman user. Some actions might be unavailable

.TP
\fB\-v\fR, \fB\-\-version\fR
show program's version number and exit

.SS
\fBSub-commands\fR
.TP
\fBahriman\fR \fI\,aur-search\/\fR
search for package
.TP
\fBahriman\fR \fI\,key-import\/\fR
import PGP key
.TP
\fBahriman\fR \fI\,package-add\/\fR
add package
.TP
\fBahriman\fR \fI\,package-remove\/\fR
remove package
.TP
\fBahriman\fR \fI\,package-status\/\fR
get package status
.TP
\fBahriman\fR \fI\,package-status-remove\/\fR
remove package status
.TP
\fBahriman\fR \fI\,package-status-update\/\fR
update package status
.TP
\fBahriman\fR \fI\,patch-add\/\fR
add patch set
.TP
\fBahriman\fR \fI\,patch-list\/\fR
list patch sets
.TP
\fBahriman\fR \fI\,patch-remove\/\fR
remove patch set
.TP
\fBahriman\fR \fI\,repo-check\/\fR
check for updates
.TP
\fBahriman\fR \fI\,repo-clean\/\fR
clean local caches
.TP
\fBahriman\fR \fI\,repo-config\/\fR
dump configuration
.TP
\fBahriman\fR \fI\,repo-init\/\fR
create repository tree
.TP
\fBahriman\fR \fI\,repo-rebuild\/\fR
rebuild repository
.TP
\fBahriman\fR \fI\,repo-remove-unknown\/\fR
remove unknown packages
.TP
\fBahriman\fR \fI\,repo-report\/\fR
generate report
.TP
\fBahriman\fR \fI\,repo-setup\/\fR
initial service configuration
.TP
\fBahriman\fR \fI\,repo-sign\/\fR
sign packages
.TP
\fBahriman\fR \fI\,repo-status-update\/\fR
update repository status
.TP
\fBahriman\fR \fI\,repo-sync\/\fR
sync repository
.TP
\fBahriman\fR \fI\,repo-update\/\fR
update packages
.TP
\fBahriman\fR \fI\,user-add\/\fR
create or update user
.TP
\fBahriman\fR \fI\,user-remove\/\fR
remove user
.TP
\fBahriman\fR \fI\,web\/\fR
web server
.SH OPTIONS 'ahriman aur-search'
usage: ahriman aur-search [-h] [-i]
                          [--sort-by {category_id,description,first_submitted,id,last_modified,license,maintainer,name,num_votes,out_of_date,package_base,package_base_id,url,url_path,version}]
                          search [search ...]

search for package in AUR using API

.TP
\fBsearch\fR
search terms, can be specified multiple times, result will match all terms

.TP
\fB\-i\fR, \fB\-\-info\fR
show additional package information

.TP
\fB\-\-sort\-by\fR {category_id,description,first_submitted,id,last_modified,license,maintainer,name,num_votes,out_of_date,package_base,package_base_id,url,url_path,version}
sort field by this field. In case if two packages have the same value of the specified field, they will be always sorted
by name

.SH OPTIONS 'ahriman search'
usage: ahriman aur-search [-h] [-i]
                          [--sort-by {category_id,description,first_submitted,id,last_modified,license,maintainer,name,num_votes,out_of_date,package_base,package_base_id,url,url_path,version}]
                          search [search ...]

search for package in AUR using API

.TP
\fBsearch\fR
search terms, can be specified multiple times, result will match all terms

.TP
\fB\-i\fR, \fB\-\-info\fR
show additional package information

.TP
\fB\-\-sort\-by\fR {category_id,description,first_submitted,id,last_modified,license,maintainer,name,num_votes,out_of_date,package_base,package_base_id,url,url_path,version}
sort field by this field. In case if two packages have the same value of the specified field, they will be always sorted
by name

.SH OPTIONS 'ahriman key-import'
usage: ahriman key-import [-h] [--key-server KEY_SERVER] key

import PGP key from public sources to the repository user

.TP
\fBkey\fR
PGP key to import from public server

.TP
\fB\-\-key\-server\fR \fI\,KEY_SERVER\/\fR
key server for key import

.SH OPTIONS 'ahriman package-add'
usage: ahriman package-add [-h] [-n]
                           [-s {PackageSource.Auto,PackageSource.Archive,PackageSource.AUR,PackageSource.Directory,PackageSource.Local,PackageSource.Remote}]
                           [--without-dependencies]
                           package [package ...]

add existing or new package to the build queue

.TP
\fBpackage\fR
package source (base name, path to local files, remote URL)

.TP
\fB\-n\fR, \fB\-\-now\fR
run update function after

.TP
\fB\-s\fR {PackageSource.Auto,PackageSource.Archive,PackageSource.AUR,PackageSource.Directory,PackageSource.Local,PackageSource.Remote}, \fB\-\-source\fR {PackageSource.Auto,PackageSource.Archive,PackageSource.AUR,PackageSource.Directory,PackageSource.Local,PackageSource.Remote}
explicitly specify the package source for this command

.TP
\fB\-\-without\-dependencies\fR
do not add dependencies

.SH OPTIONS 'ahriman add'
usage: ahriman package-add [-h] [-n]
                           [-s {PackageSource.Auto,PackageSource.Archive,PackageSource.AUR,PackageSource.Directory,PackageSource.Local,PackageSource.Remote}]
                           [--without-dependencies]
                           package [package ...]

add existing or new package to the build queue

.TP
\fBpackage\fR
package source (base name, path to local files, remote URL)

.TP
\fB\-n\fR, \fB\-\-now\fR
run update function after

.TP
\fB\-s\fR {PackageSource.Auto,PackageSource.Archive,PackageSource.AUR,PackageSource.Directory,PackageSource.Local,PackageSource.Remote}, \fB\-\-source\fR {PackageSource.Auto,PackageSource.Archive,PackageSource.AUR,PackageSource.Directory,PackageSource.Local,PackageSource.Remote}
explicitly specify the package source for this command

.TP
\fB\-\-without\-dependencies\fR
do not add dependencies

.SH OPTIONS 'ahriman package-update'
usage: ahriman package-add [-h] [-n]
                           [-s {PackageSource.Auto,PackageSource.Archive,PackageSource.AUR,PackageSource.Directory,PackageSource.Local,PackageSource.Remote}]
                           [--without-dependencies]
                           package [package ...]

add existing or new package to the build queue

.TP
\fBpackage\fR
package source (base name, path to local files, remote URL)

.TP
\fB\-n\fR, \fB\-\-now\fR
run update function after

.TP
\fB\-s\fR {PackageSource.Auto,PackageSource.Archive,PackageSource.AUR,PackageSource.Directory,PackageSource.Local,PackageSource.Remote}, \fB\-\-source\fR {PackageSource.Auto,PackageSource.Archive,PackageSource.AUR,PackageSource.Directory,PackageSource.Local,PackageSource.Remote}
explicitly specify the package source for this command

.TP
\fB\-\-without\-dependencies\fR
do not add dependencies

.SH OPTIONS 'ahriman package-remove'
usage: ahriman package-remove [-h] package [package ...]

remove package from the repository

.TP
\fBpackage\fR
package name or base


.SH OPTIONS 'ahriman remove'
usage: ahriman package-remove [-h] package [package ...]

remove package from the repository

.TP
\fBpackage\fR
package name or base


.SH OPTIONS 'ahriman package-status'
usage: ahriman package-status [-h] [--ahriman] [-i]
                              [-s {BuildStatusEnum.Unknown,BuildStatusEnum.Pending,BuildStatusEnum.Building,BuildStatusEnum.Failed,BuildStatusEnum.Success}]
                              [package ...]

request status of the package

.TP
\fBpackage\fR
filter status by package base

.TP
\fB\-\-ahriman\fR
get service status itself

.TP
\fB\-i\fR, \fB\-\-info\fR
show additional package information

.TP
\fB\-s\fR {BuildStatusEnum.Unknown,BuildStatusEnum.Pending,BuildStatusEnum.Building,BuildStatusEnum.Failed,BuildStatusEnum.Success}, \fB\-\-status\fR {BuildStatusEnum.Unknown,BuildStatusEnum.Pending,BuildStatusEnum.Building,BuildStatusEnum.Failed,BuildStatusEnum.Success}
filter packages by status

.SH OPTIONS 'ahriman status'
usage: ahriman package-status [-h] [--ahriman] [-i]
                              [-s {BuildStatusEnum.Unknown,BuildStatusEnum.Pending,BuildStatusEnum.Building,BuildStatusEnum.Failed,BuildStatusEnum.Success}]
                              [package ...]

request status of the package

.TP
\fBpackage\fR
filter status by package base

.TP
\fB\-\-ahriman\fR
get service status itself

.TP
\fB\-i\fR, \fB\-\-info\fR
show additional package information

.TP
\fB\-s\fR {BuildStatusEnum.Unknown,BuildStatusEnum.Pending,BuildStatusEnum.Building,BuildStatusEnum.Failed,BuildStatusEnum.Success}, \fB\-\-status\fR {BuildStatusEnum.Unknown,BuildStatusEnum.Pending,BuildStatusEnum.Building,BuildStatusEnum.Failed,BuildStatusEnum.Success}
filter packages by status

.SH OPTIONS 'ahriman package-status-remove'
usage: ahriman package-status-remove [-h] package [package ...]

remove the package from the status page

.TP
\fBpackage\fR
remove specified packages


.SH OPTIONS 'ahriman package-status-update'
usage: ahriman package-status-update [-h]
                                     [-s {BuildStatusEnum.Unknown,BuildStatusEnum.Pending,BuildStatusEnum.Building,BuildStatusEnum.Failed,BuildStatusEnum.Success}]
                                     [package ...]

update package status on the status page

.TP
\fBpackage\fR
set status for specified packages. If no packages supplied, service status will be updated

.TP
\fB\-s\fR {BuildStatusEnum.Unknown,BuildStatusEnum.Pending,BuildStatusEnum.Building,BuildStatusEnum.Failed,BuildStatusEnum.Success}, \fB\-\-status\fR {BuildStatusEnum.Unknown,BuildStatusEnum.Pending,BuildStatusEnum.Building,BuildStatusEnum.Failed,BuildStatusEnum.Success}
new status

.SH OPTIONS 'ahriman status-update'
usage: ahriman package-status-update [-h]
                                     [-s {BuildStatusEnum.Unknown,BuildStatusEnum.Pending,BuildStatusEnum.Building,BuildStatusEnum.Failed,BuildStatusEnum.Success}]
                                     [package ...]

update package status on the status page

.TP
\fBpackage\fR
set status for specified packages. If no packages supplied, service status will be updated

.TP
\fB\-s\fR {BuildStatusEnum.Unknown,BuildStatusEnum.Pending,BuildStatusEnum.Building,BuildStatusEnum.Failed,BuildStatusEnum.Success}, \fB\-\-status\fR {BuildStatusEnum.Unknown,BuildStatusEnum.Pending,BuildStatusEnum.Building,BuildStatusEnum.Failed,BuildStatusEnum.Success}
new status

.SH OPTIONS 'ahriman patch-add'
usage: ahriman patch-add [-h] [-t TRACK] package

create or update source patches

.TP
\fBpackage\fR
path to directory with changed files for patch addition/update

.TP
\fB\-t\fR \fI\,TRACK\/\fR, \fB\-\-track\fR \fI\,TRACK\/\fR
files which has to be tracked

.SH OPTIONS 'ahriman patch-list'
usage: ahriman patch-list [-h] package

list available patches for the package

.TP
\fBpackage\fR
package base


.SH OPTIONS 'ahriman patch-remove'
usage: ahriman patch-remove [-h] package

remove patches for the package

.TP
\fBpackage\fR
package base


.SH OPTIONS 'ahriman repo-check'
usage: ahriman repo-check [-h] [--no-vcs] [package ...]

check for packages updates. Same as update \-\-dry\-run \-\-no\-manual

.TP
\fBpackage\fR
filter check by package base

.TP
\fB\-\-no\-vcs\fR
do not check VCS packages

.SH OPTIONS 'ahriman check'
usage: ahriman repo-check [-h] [--no-vcs] [package ...]

check for packages updates. Same as update \-\-dry\-run \-\-no\-manual

.TP
\fBpackage\fR
filter check by package base

.TP
\fB\-\-no\-vcs\fR
do not check VCS packages

.SH OPTIONS 'ahriman repo-clean'
usage: ahriman repo-clean [-h] [--build] [--cache] [--chroot] [--manual] [--packages] [--patches]

remove local caches


.TP
\fB\-\-build\fR
clear directory with package sources

.TP
\fB\-\-cache\fR
clear directory with package caches

.TP
\fB\-\-chroot\fR
clear build chroot

.TP
\fB\-\-manual\fR
clear directory with manually added packages

.TP
\fB\-\-packages\fR
clear directory with built packages

.TP
\fB\-\-patches\fR
clear directory with patches

.SH OPTIONS 'ahriman clean'
usage: ahriman repo-clean [-h] [--build] [--cache] [--chroot] [--manual] [--packages] [--patches]

remove local caches


.TP
\fB\-\-build\fR
clear directory with package sources

.TP
\fB\-\-cache\fR
clear directory with package caches

.TP
\fB\-\-chroot\fR
clear build chroot

.TP
\fB\-\-manual\fR
clear directory with manually added packages

.TP
\fB\-\-packages\fR
clear directory with built packages

.TP
\fB\-\-patches\fR
clear directory with patches

.SH OPTIONS 'ahriman repo-config'
usage: ahriman repo-config [-h]

dump configuration for the specified architecture



.SH OPTIONS 'ahriman config'
usage: ahriman repo-config [-h]

dump configuration for the specified architecture



.SH OPTIONS 'ahriman repo-init'
usage: ahriman repo-init [-h]

create empty repository tree. Optional command for auto architecture support



.SH OPTIONS 'ahriman init'
usage: ahriman repo-init [-h]

create empty repository tree. Optional command for auto architecture support



.SH OPTIONS 'ahriman repo-rebuild'
usage: ahriman repo-rebuild [-h] [--depends-on DEPENDS_ON]

force rebuild whole repository


.TP
\fB\-\-depends\-on\fR \fI\,DEPENDS_ON\/\fR
only rebuild packages that depend on specified package

.SH OPTIONS 'ahriman rebuild'
usage: ahriman repo-rebuild [-h] [--depends-on DEPENDS_ON]

force rebuild whole repository


.TP
\fB\-\-depends\-on\fR \fI\,DEPENDS_ON\/\fR
only rebuild packages that depend on specified package

.SH OPTIONS 'ahriman repo-remove-unknown'
usage: ahriman repo-remove-unknown [-h] [--dry-run] [-i]

remove packages which are missing in AUR and do not have local PKGBUILDs


.TP
\fB\-\-dry\-run\fR
just perform check for packages without removal

.TP
\fB\-i\fR, \fB\-\-info\fR
show additional package information

.SH OPTIONS 'ahriman remove-unknown'
usage: ahriman repo-remove-unknown [-h] [--dry-run] [-i]

remove packages which are missing in AUR and do not have local PKGBUILDs


.TP
\fB\-\-dry\-run\fR
just perform check for packages without removal

.TP
\fB\-i\fR, \fB\-\-info\fR
show additional package information

.SH OPTIONS 'ahriman repo-report'
usage: ahriman repo-report [-h] [target ...]

generate repository report according to current settings

.TP
\fBtarget\fR
target to generate report


.SH OPTIONS 'ahriman report'
usage: ahriman repo-report [-h] [target ...]

generate repository report according to current settings

.TP
\fBtarget\fR
target to generate report


.SH OPTIONS 'ahriman repo-setup'
usage: ahriman repo-setup [-h] [--build-command BUILD_COMMAND] [--from-configuration FROM_CONFIGURATION] [--no-multilib]
                          --packager PACKAGER --repository REPOSITORY [--sign-key SIGN_KEY]
                          [--sign-target {SignSettings.Packages,SignSettings.Repository}] [--web-port WEB_PORT]

create initial service configuration, requires root


.TP
\fB\-\-build\-command\fR \fI\,BUILD_COMMAND\/\fR
build command prefix

.TP
\fB\-\-from\-configuration\fR \fI\,FROM_CONFIGURATION\/\fR
path to default devtools pacman configuration

.TP
\fB\-\-no\-multilib\fR
do not add multilib repository

.TP
\fB\-\-packager\fR \fI\,PACKAGER\/\fR
packager name and email

.TP
\fB\-\-repository\fR \fI\,REPOSITORY\/\fR
repository name

.TP
\fB\-\-sign\-key\fR \fI\,SIGN_KEY\/\fR
sign key id

.TP
\fB\-\-sign\-target\fR {SignSettings.Packages,SignSettings.Repository}
sign options

.TP
\fB\-\-web\-port\fR \fI\,WEB_PORT\/\fR
port of the web service

.SH OPTIONS 'ahriman setup'
usage: ahriman repo-setup [-h] [--build-command BUILD_COMMAND] [--from-configuration FROM_CONFIGURATION] [--no-multilib]
                          --packager PACKAGER --repository REPOSITORY [--sign-key SIGN_KEY]
                          [--sign-target {SignSettings.Packages,SignSettings.Repository}] [--web-port WEB_PORT]

create initial service configuration, requires root


.TP
\fB\-\-build\-command\fR \fI\,BUILD_COMMAND\/\fR
build command prefix

.TP
\fB\-\-from\-configuration\fR \fI\,FROM_CONFIGURATION\/\fR
path to default devtools pacman configuration

.TP
\fB\-\-no\-multilib\fR
do not add multilib repository

.TP
\fB\-\-packager\fR \fI\,PACKAGER\/\fR
packager name and email

.TP
\fB\-\-repository\fR \fI\,REPOSITORY\/\fR
repository name

.TP
\fB\-\-sign\-key\fR \fI\,SIGN_KEY\/\fR
sign key id

.TP
\fB\-\-sign\-target\fR {SignSettings.Packages,SignSettings.Repository}
sign options

.TP
\fB\-\-web\-port\fR \fI\,WEB_PORT\/\fR
port of the web service

.SH OPTIONS 'ahriman repo-sign'
usage: ahriman repo-sign [-h] [package ...]

(re\-)sign packages and repository database according to current settings

.TP
\fBpackage\fR
sign only specified packages


.SH OPTIONS 'ahriman sign'
usage: ahriman repo-sign [-h] [package ...]

(re\-)sign packages and repository database according to current settings

.TP
\fBpackage\fR
sign only specified packages


.SH OPTIONS 'ahriman repo-status-update'
usage: ahriman repo-status-update [-h]
                                  [-s {BuildStatusEnum.Unknown,BuildStatusEnum.Pending,BuildStatusEnum.Building,BuildStatusEnum.Failed,BuildStatusEnum.Success}]

update repository status on the status page


.TP
\fB\-s\fR {BuildStatusEnum.Unknown,BuildStatusEnum.Pending,BuildStatusEnum.Building,BuildStatusEnum.Failed,BuildStatusEnum.Success}, \fB\-\-status\fR {BuildStatusEnum.Unknown,BuildStatusEnum.Pending,BuildStatusEnum.Building,BuildStatusEnum.Failed,BuildStatusEnum.Success}
new status

.SH OPTIONS 'ahriman repo-sync'
usage: ahriman repo-sync [-h] [target ...]

sync repository files to remote server according to current settings

.TP
\fBtarget\fR
target to sync


.SH OPTIONS 'ahriman sync'
usage: ahriman repo-sync [-h] [target ...]

sync repository files to remote server according to current settings

.TP
\fBtarget\fR
target to sync


.SH OPTIONS 'ahriman repo-update'
usage: ahriman repo-update [-h] [--dry-run] [--no-aur] [--no-manual] [--no-vcs] [package ...]

check for packages updates and run build process if requested

.TP
\fBpackage\fR
filter check by package base

.TP
\fB\-\-dry\-run\fR
just perform check for updates, same as check command

.TP
\fB\-\-no\-aur\fR
do not check for AUR updates. Implies \-\-no\-vcs

.TP
\fB\-\-no\-manual\fR
do not include manual updates

.TP
\fB\-\-no\-vcs\fR
do not check VCS packages

.SH OPTIONS 'ahriman update'
usage: ahriman repo-update [-h] [--dry-run] [--no-aur] [--no-manual] [--no-vcs] [package ...]

check for packages updates and run build process if requested

.TP
\fBpackage\fR
filter check by package base

.TP
\fB\-\-dry\-run\fR
just perform check for updates, same as check command

.TP
\fB\-\-no\-aur\fR
do not check for AUR updates. Implies \-\-no\-vcs

.TP
\fB\-\-no\-manual\fR
do not include manual updates

.TP
\fB\-\-no\-vcs\fR
do not check VCS packages

.SH OPTIONS 'ahriman user-add'
usage: ahriman user-add [-h] [--as-service] [--no-reload] [-p PASSWORD]
                        [-r {UserAccess.Safe,UserAccess.Read,UserAccess.Write}] [-s]
                        username

update user for web services with the given password and role. In case if password was not entered it will be asked interactively

.TP
\fBusername\fR
username for web service

.TP
\fB\-\-as\-service\fR
add user as service user

.TP
\fB\-\-no\-reload\fR
do not reload authentication module

.TP
\fB\-p\fR \fI\,PASSWORD\/\fR, \fB\-\-password\fR \fI\,PASSWORD\/\fR
user password. Blank password will be treated as empty password, which is in particular must be used for OAuth2
authorization type.

.TP
\fB\-r\fR {UserAccess.Safe,UserAccess.Read,UserAccess.Write}, \fB\-\-role\fR {UserAccess.Safe,UserAccess.Read,UserAccess.Write}
user access level

.TP
\fB\-s\fR, \fB\-\-secure\fR
set file permissions to user\-only

.SH OPTIONS 'ahriman user-remove'
usage: ahriman user-remove [-h] [--no-reload] [-s] username

remove user from the user mapping and update the configuration

.TP
\fBusername\fR
username for web service

.TP
\fB\-\-no\-reload\fR
do not reload authentication module

.TP
\fB\-s\fR, \fB\-\-secure\fR
set file permissions to user\-only

.SH OPTIONS 'ahriman web'
usage: ahriman web [-h]

start web server



.SH COMMENTS
Argument list can also be read from file by using @ prefix.

.SH AUTHORS
.B ahriman
was written by ahriman team <>.
.SH DISTRIBUTION
The latest version of ahriman may be downloaded from
.UR https://github.com/arcan1s/ahriman
.UE
